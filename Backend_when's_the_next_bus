const express = require('express');
const {google} = require('googleapis');

const dayjs = require('dayjs')
var customParseFormat = require('dayjs/plugin/customParseFormat')
dayjs.extend(customParseFormat)

const app = express();

app.get('/', async(req, res) => {

    // getting current time. return value is of the format "weekday, month date, hh:mm AM/PM". eg: "Sat, Feb 17, 01:08 AM"
    const currentTimeFull = new Date().toLocaleString('en-US', {
        weekday: 'short',
        hour : '2-digit',
        minute : '2-digit',
        day : '2-digit',
        month: 'short'
    })
    

    //const currentTimeFull = 'Sat, Mar 09, 08:25 AM'
    // logs current time
    console.log(`Time is ${currentTimeFull}`)

    const auth = new google.auth.GoogleAuth({
        keyFile:"credentials.json",
        scopes:"https://www.googleapis.com/auth/spreadsheets"
    })

    const client = await  auth.getClient();

    const googleSheets = google.sheets({ version: "v4", auth: client });

    const spreadsheetId = "1xe6YfuuSxe_1a0kM0U7fRPE364A39oOZys6aoFHHk9w";

    const metaData = await googleSheets.spreadsheets.get({
        auth,
        spreadsheetId,
    });

    const getRows = await googleSheets.spreadsheets.values.get({
    auth,
    spreadsheetId,
    range: "Sheet1",
    });  

    // array containing row-wise data from index 1 to end (not starting from 0 as 1st row is headers)
    const rowData = getRows.data.values.slice(1)

    const currentTime = currentTimeFull.split(', ')[2]
    
    res.send('hello')
    console.log(`The next bus to Nila: ${nextBus(rowDataSelector(rowData, currentTimeFull), currentTime, 'nila')} \nThe next bus to Sahyadri: ${nextBus(rowDataSelector(rowData, currentTimeFull), currentTime, 'sahyadri')}`)
})

app.listen(5000)

// takes row-wise data and current time as arguments and returns the next bus to nila timing
// checks first if end point is nila, then checks if that row's time value is greater than current time

function nextBus(rowsData, compareTimeValue, endpoint) {
    const currTime = dayjs(compareTimeValue)
    for (val in rowsData) {
        if (rowsData[val][2].toLowerCase() === endpoint && dayjs(compareTimeValue, 'hh:mm A').isBefore(dayjs(rowsData[val][0], 'hh:mm A'))) {
                return rowsData[val][0]
        }   
    }
}

function rowDataSelector(rowsData, currDateTime) {
    const instiHolidays = ['Jan 15', 'Jan 26', 'Mar 25', 'Mar 29', 'Apr 11', 'Apr 21']
    const MonFri = ['Mon', 'Tue', 'Wed', 'Thu', 'Fri']
    const currDate = currDateTime.split(', ')[1]
    let dayIndex = currDateTime.split(', ')[0]

    // if date is a institute holiday go to saturday timetable
    if (instiHolidays.includes(currDate) && currDateTime.split(', ')[0] !== 'Sun') {
        dayIndex = "Sat"
    }
    
    if (MonFri.includes(dayIndex)) {
        dayIndex = "Mon-Fri"
    }

    let startIndex = -1
    let endIndex = 0
    for (let row = 0; row < rowsData.length; row++) {
        if (rowsData[row][4] === dayIndex) {
            if (startIndex === -1) {
                startIndex = row
            } 
            endIndex = row + 1
        }
        else if (endIndex) {
            break
        } 
    }
    return rowsData.slice(startIndex, endIndex)
}
